name: $(Date:yyyyMMdd)$(Rev:.r)

variables:
  repository: whack-a-mole/mole-cloud
  tag: $(Build.BuildNumber)
  report_url: https://demo-whack-a-mole-dev-func.azurewebsites.net/api/ReportBuildState

pool:
  vmImage: 'ubuntu-18.04'

steps:
- script: |
    curl -d "{\"State\": 1, \"Message\": \"Initializing Azure CLI Connection\", \"ServiceName\": \"$(service_name)\"}" -X POST $(report_url)

# Update node count in helm chart
- task: kasunkodagoda.regex-match-replace.regex-match-replace.RegExMatchReplace@2
  displayName: 'Update node count'
  inputs:
    PathToFile: 'charts/mole-cloud/values.yaml'
    RegEx: 'replicas:.*'
    ValueToReplace: 'replicas: $(pod_replica_count)'

# Update image repository in helm chart
- task: kasunkodagoda.regex-match-replace.regex-match-replace.RegExMatchReplace@2
  displayName: 'Update image repository'
  inputs:
    PathToFile: 'charts/mole-cloud/values.yaml'
    RegEx: 'repository:.*'
    ValueToReplace: 'repository: $(acr_name).azurecr.io/$(repository)'

# Update image tag in helm chart
- task: kasunkodagoda.regex-match-replace.regex-match-replace.RegExMatchReplace@2
  displayName: 'Update image tag'
  inputs:
    PathToFile: 'charts/mole-cloud/values.yaml'
    RegEx: 'tag:.*'
    ValueToReplace: 'tag: "latest"'

# Update pod_color tag in helm chart
- task: kasunkodagoda.regex-match-replace.regex-match-replace.RegExMatchReplace@2
  displayName: 'Update image tag'
  inputs:
    PathToFile: 'charts/mole-cloud/values.yaml'
    RegEx: 'pod_color:.*'
    ValueToReplace: 'pod_color: "$(pod_color)"'

# Build, package and push
- task: AzureCLI@1
  displayName: 'Azure CLI '
  inputs:
    azureSubscription: 'MTC Denver Sandbox'
    scriptLocation: inlineScript
    inlineScript: |      
      # Package the helm chart and push it to ACR
      curl -d "{\"State\": 2, \"Message\": \"Initializing Helm...\", \"ServiceName\": \"$(service_name)\"}" -X POST $(report_url)
      helm init --client-only

      curl -d "{\"State\": 2, \"Message\": \"Packaging Helm Chart...\", \"ServiceName\": \"$(service_name)\"}" -X POST $(report_url)
      helm package charts/mole-cloud --version $(Build.BuildNumber)

      curl -d "{\"State\": 2, \"Message\": \"Pushing Helm chart to Azure Container Registry...\", \"ServiceName\": \"$(service_name)\"}" -X POST $(report_url)
      az acr helm push -n $(acr_name) mole-cloud-$(Build.BuildNumber).tgz

- script: |
    curl -d "{\"State\": 5, \"Message\": \"Error Building Application\", \"ServiceName\": \"$(service_name)\"}" -X POST $(report_url)
  condition: failed()
